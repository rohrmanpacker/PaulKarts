package paulkarts;

import javafx.geometry.Rectangle2D;
import javafx.scene.canvas.*;
import javafx.scene.image.Image;
import javafx.scene.paint.Color;

public class Car extends Canvas{
  private Image image;				//contains the image that will represent the car
  private double positionX;			//contains the x position on the scene
  private double positionY; 		//contains the y position on the scene
  private double velocity; 			//contains the velocity of the sprite
  private double angle; 			//contains the angle at which the sprite is moving
  private final double maxSpeed;	//contains the maximum velocity that the sprite can go in either the x or y 
  									//direction
  private double width;				//contains the width of the sprite
  private double height;			//contains the height of the sprite

  //constructor, takes an x and y value for the bottom left corner of the car, as well as a color
  public Car(double startingX, double startingY, Color c){
	  
	  positionX = startingX;
	  positionY = startingY;
	  
	  velocity = 0;
	  angle = 90;
	  
	  maxSpeed = 69;
  }
  
  public Car(double startingX, double startingY){
	this(startingX,startingY, Color.rgb((int)Math.random()*256,(int)Math.random()*256,(int)Math.random()*256));	  
  }
  
  public Car(double[] startingPos){
	  this(startingPos[0],startingPos[1]);	  
  }
  
  public Car(double[] startingPos, Color c){
	  this(startingPos[0],startingPos[1],c);	  
  }

  // ...
  // methods omitted for brevity
  // ...

  public void update(double time)
  {
      positionX += velocity * time * Math.cos(this.angle);
      positionY += velocity * time * Math.sin(this.angle);
  }

  public void render(GraphicsContext gc)
  {
      gc.drawImage( image, positionX, positionY );
  }

  public Rectangle2D getBoundary()
  {
      return new Rectangle2D(positionX,positionY,width,height);
  }

  public boolean intersects(Sprite s)
  {
      return s.getBoundary().intersects( this.getBoundary() );
  }
  
  public void accelerate(double rate)
  {
	  velocity += rate;
  }
}
