package paulkarts;


import java.util.ArrayList;

import javafx.animation.AnimationTimer;
import javafx.application.*;
import javafx.event.EventHandler;
import javafx.geometry.Rectangle2D;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.SnapshotParameters;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.paint.Paint;
import javafx.scene.text.Text;
import javafx.stage.Stage;


public class PaulKarts extends Application{
	private double[][] defaultPositions = {{650,250},{700,275},{750,300},{650,325},{700,350},{750,375}};
	public static void main(String[] args){
		Application.launch(args);
	}


	public void start(Stage primaryStage) throws Exception {
		int width = 800, height = 600;

		primaryStage.setWidth(width+16);//idk why this works but it does
		primaryStage.setHeight(height+39);

		Text txt=new Text();


		VBox root = new VBox();
		Canvas canvas = new Canvas(width,height);//background
		root.getChildren().addAll(canvas,txt);
		GraphicsContext gc = canvas.getGraphicsContext2D();//this is the background



		ArrayList<Car> cars = new ArrayList<Car>();//array of cars

		for(int i = 0;i<defaultPositions.length;i++){//makes all the cars that there are default positions for
			cars.add(new Car(defaultPositions[i][0],defaultPositions[i][1]));//makes the cars

		}

		root.getChildren().add(cars.get(0).getImageView());
		for(Car c:cars)
			c.setImage("car1.png");



		Scene scene = new Scene(root,width,height);

		ArrayList<String> input = new ArrayList<String>();
		scene.setOnKeyPressed(
				new EventHandler<KeyEvent>(){
					public void handle(KeyEvent e){
						String code = e.getCode().toString();
						if(!input.contains(code)){
							input.add(code);
						}
					}
				}
				);//this makes the input array have the inputs in String form so we can use them later

		scene.setOnKeyReleased(
				new EventHandler<KeyEvent>(){
					public void handle(KeyEvent e){
						String code = e.getCode().toString();
						input.remove(code);
					}
				}
				);//this takes the code out of input if it is no longer being pressed

		primaryStage.setScene(scene);
		primaryStage.setTitle("PAULKARTS");

		ArrayList<Rectangle2D> borders=Border.getBorder(height, width);


		final long startNanoTime = System.nanoTime();//getting nanotime for animation uses
		double[] pastNanoTime = new double[1];
		new AnimationTimer()//this is like the game timer
		{
			public void handle(long currentNanoTime)
			{
				double t = (currentNanoTime - startNanoTime) / 1000000000.0; //t is the total change in time since the start in seconds
				gc.clearRect(0, 0, width, height);//clears the canvas
				gc.strokeRect(0, 0, width, height);
				//this is the border
				Border.drawBoundries(gc, height, width);
				
				if(t>=0&&t<1){//this is the starting sequence
					gc.fillText("START IN", 680, 200);
				}
				if(t>=1&&t<2){
					gc.fillText("3", 700, 200);
				}
				if(t>=2&&t<3){
					gc.fillText("2", 700, 200);
				}
				if(t>=3&&t<4){
					gc.fillText("1", 700, 200);
				}
				if(t>=4&&t<6){
					gc.fillText("GO!", 692, 200);
				}
				
				//controlls movement (and you cant go until after it says GO
				if(t>=4&&input.contains("W")){
					cars.get(0).accelerate(.002);
				}
				if(t>=4&&input.contains("S")){
					cars.get(0).accelerate(-.002);
				}
				if(t>=4&&input.contains("A")){
					cars.get(0).rotate(-2);
				}
				if(t>=4&&input.contains("D")){
					cars.get(0).rotate(2);
				}
				for(Rectangle2D rect:borders){
					if(rect.contains(cars.get(0).getBoundary())){
						cars.get(0).crash();
					}
				}
				for(Car c:cars){//this does all the cars
					c.update(40);//pastNanoTime[0]-t is the change in time
					c.render(gc);	
				}
				
				txt.setText(""+cars.get(0).getVelocity()+"\t"+cars.get(0).getAcceleration());
				pastNanoTime[0]=t;
			}
		}.start();

		primaryStage.show();
	}

}
